{"version":3,"sources":["bgf_BeadRoadChart.js"],"names":["cc","Class","extends","Component","properties","totalRoadCount","default","type","Integer","beadContainer","Node","beadPrefab","Prefab","beadSpriteAtlas","SpriteAtlas","isHorizon","ctor","subscriberList","beadPool","roomId","totalBeads","nowBeadArr","nowRowCount","tempBead","nowRowPosition","nextPutRowPosition","turnBeadNo","onLoad","removeAllChildren","initRoomBeadPool","blackBead","beadPosition","beadRow","isChangeColor","redBead","nowBeadPosition","changeColorBeadPosition","putBeadCount","scrollView","node","getComponent","ScrollView","i","beadSprite","newBead","get","beadName","setName","parent","onDestroy","onAllBeadBtnClick","allBead","result","Math","floor","random","temp","push","length","onBeadRoadInfo","onRedBtnClick","onBlackBtnClick","onClearBtnClick","NodePool","roundCount","sys","isNative","sub","instantiate","put","evt","differentBead","isSameColorWithBefore","setNewBead","bead","beadNo","_getBeadSprite","isFirstTimeCreate","putBead","beadObj","setBeadType","oldNextBeadRow","getChildByName","children","name","beadRowTemplate","setNewSprite","nowBeadRow","getIsTurn","isTurn","beadTemplate","nextBead","getBeadType","beforeRow","beforeRowBeadTemplate","nextTwoBead","childrenCount","putBeadType","setBlackBead","setRedBead","console","log","scrollToRight","isFull","_checkIsTheSame","now","last","isTheSame","beadType","spriteName","cases","hasOwnProperty","resultSriteFrame","getSpriteFrame","_getNowBeadNo"],"mappings":"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","file":"bgf_BeadRoadChart.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\bgf_BottomPanel","sourcesContent":["import {first, last, filter, forEach, sortBy, map, difference} from 'lodash';\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        totalRoadCount: {\r\n            default: 18,\r\n            type: cc.Integer\r\n        },\r\n        beadContainer: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        beadPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        beadSpriteAtlas: {\r\n            default: null,\r\n            type: cc.SpriteAtlas\r\n        },\r\n        isHorizon: {\r\n            default: true\r\n        }\r\n    },\r\n    ctor() {\r\n        this.subscriberList = [];\r\n        this.beadPool = null;\r\n        this.roomId = null;\r\n        this.totalBeads = 0;\r\n        this.nowBeadArr = [];//目前珠路全盤圖\r\n        this.nowRowCount = 0;//目前珠路列數量\r\n        this.tempBead = [];\r\n        this.nowRowPosition = 0;//目前所在的珠路哪一列\r\n        this.nextPutRowPosition = 0;\r\n        this.turnBeadNo = null;//珠子要轉彎的位置\r\n    },\r\n    onLoad() {\r\n        this.beadContainer.removeAllChildren();//先全部清空\r\n        this.beadPool = this.initRoomBeadPool();//初始化物件池\r\n        this.blackBead = {beadPosition: 0, beadRow: null, isChangeColor: false};\r\n        this.redBead = {beadPosition: 0, beadRow: null, isChangeColor: false};\r\n        this.nowBeadPosition = 0;\r\n        this.changeColorBeadPosition = 0;\r\n        this.putBeadCount = 0;\r\n\r\n        this.scrollView = this.node.getComponent(cc.ScrollView);\r\n\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            let beadPosition = 0;\r\n            let beadSprite = null;\r\n            let newBead = this.beadPool.get({beadPosition, beadSprite});\r\n            // newBead.getComponent(\"bgf_BeadTemplate\").setBeadType({beadPosition, beadNo});\r\n            let beadName = i + 1;\r\n            newBead.setName(`${beadName}`);\r\n            newBead.parent = this.beadContainer;\r\n        }\r\n        // this.scrollView.scrollToRight(0.4);\r\n        // console.log(difference([2, 3, 4], [2, 3]));\r\n        // this.ttt = 1;\r\n        // let a = {test: this.ttt};\r\n        // console.log(a);\r\n        // this.ttt++;\r\n        // console.log(a);\r\n        // console.log(this.ttt);\r\n    },\r\n\r\n    onDestroy() {\r\n    },\r\n\r\n    onAllBeadBtnClick() {\r\n        // 1-5\r\n        let allBead = [];\r\n        do {\r\n            let result = Math.floor(Math.random() * 5) + 1;\r\n            if (result !== 3) {\r\n                let temp = [];\r\n                temp.push(result);\r\n                allBead.push(temp);\r\n            }\r\n        } while (allBead.length < 20);\r\n        this.tempBead = allBead;\r\n        this.onBeadRoadInfo(allBead);\r\n\r\n        // this.onBeadRoadInfo([1,1,2]);\r\n    },\r\n    onRedBtnClick() {\r\n        this.tempBead.push([2]);\r\n        this.onBeadRoadInfo(this.tempBead);\r\n    },\r\n    onBlackBtnClick() {\r\n        this.tempBead.push([1]);\r\n        this.onBeadRoadInfo(this.tempBead);\r\n    },\r\n    onClearBtnClick() {\r\n        this.beadContainer.removeAllChildren();//先全部清空\r\n        this.beadPool = null;\r\n        this.beadPool = this.initRoomBeadPool();//初始化物件池\r\n        this.totalBeads = 0;\r\n        this.nowBeadArr = [];//目前珠路全盤圖\r\n        this.nowRowCount = 0;//目前珠路列數量\r\n        this.nowRowPosition = 0;//目前所在的珠路哪一列\r\n        this.turnBeadNo = null;//珠子要轉彎的位置\r\n    },\r\n\r\n    initRoomBeadPool() {\r\n        let beadPool = new cc.NodePool('bgf_BeadTemplate');\r\n        let roundCount = cc.sys.isNative ? this.totalRoadCount : (this.totalRoadCount + 4);\r\n        for (let i = 0; i < roundCount; i++) {\r\n            let sub = cc.instantiate(this.beadPrefab); // 创建节点\r\n            beadPool.put(sub); // 通过 putInPool 接口放入对象池\r\n        }\r\n        return beadPool;\r\n    },\r\n\r\n    onBeadRoadInfo(evt) {\r\n        // console.log('evt = ', evt);\r\n        // console.log('this.nowBeadArr = ',this.nowBeadArr);\r\n        this.totalBeads = evt.length;\r\n        let differentBead = difference(evt, this.nowBeadArr);//比對全盤珠路與目前珠路差異\r\n        // console.log(\"differentBead = \", differentBead);//全盤是新的的話,會印出全部;否則是只印出不一樣的一顆珠子\r\n        for (let i = 0; i < differentBead.length; i++) {\r\n            //將不同的珠路塞進去全盤珠路\r\n            this.nowBeadArr.push(differentBead[i]);\r\n        }\r\n\r\n        // console.log('after push this.nowBeadArr = ',this.nowBeadArr);\r\n        // console.log(\"differentBead = \", differentBead);//全盤是新的的話,會印出全部;否則是只印出不一樣的一顆珠子\r\n        let isSameColorWithBefore = true;//後一顆珠子是否與前一顆珠子相同\r\n        if (differentBead.length === 1 && this.totalBeads !== 1) {//如果差異珠子只有一顆,且總珠子大於一顆;表示非開新局\r\n            isSameColorWithBefore =\r\n                this.nowBeadArr[this.nowBeadArr.length - 1] % 3 === this.nowBeadArr[this.nowBeadArr.length - 2] % 3;\r\n            // console.log('isSameColorWithBefore = ',isSameColorWithBefore);\r\n            // console.log('differentBead[0] = ',differentBead[0]);\r\n            //1(black) = 4(blackLucky) ; 2(red) = 5(redLucky) ; 沒有tie\r\n            this.setNewBead(differentBead[0], isSameColorWithBefore);\r\n        } else {\r\n            this.putBeadCount = 0;\r\n            //剛進房間,創全盤\r\n            for (let i = 0; i < differentBead.length; i++) {\r\n                if (i !== 0) isSameColorWithBefore =\r\n                    this.nowBeadArr[i] % 3 === this.nowBeadArr[i - 1] % 3;\r\n                this.setNewBead(differentBead[i], isSameColorWithBefore);\r\n                this.putBeadCount++;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 設定單一個珠子\r\n     * @param bead 珠子種類\r\n     * @param isSameColorWithBefore 是否與前一顆相同\r\n     */\r\n    setNewBead(bead, isSameColorWithBefore = true) {\r\n        let beadNo = bead[0] === 1 || bead[0] === 4 ? 0 : 1;//0是黑, 1是紅\r\n\r\n        let beadSprite = this._getBeadSprite(bead);//取得珠子spriteFrame\r\n\r\n        // let isFirstTimeCreate = this.beadContainer.childrenCount === 0;//判斷是否為珠路盤剛初始化\r\n        let isFirstTimeCreate = this.putBeadCount === 0;//判斷是否為珠路盤剛初始化\r\n\r\n        // const createMoreThreeBeadRow = ()=>{\r\n        //     for(let i = 1 ; i < 4 ; i ++){\r\n        //         let beadPosition = 0;\r\n        //         let beadSprite = null;\r\n        //         let newBead;\r\n        //         // if(this.beadPool.size() > 0 ){\r\n        //             newBead = this.beadPool.get({beadPosition, beadSprite});\r\n        //         // }else{\r\n        //         //     newBead = cc.instantiate(this.beadPrefab);\r\n        //         //     this.beadPool.put(newBead);\r\n        //         //     newBead = this.beadPool.get({beadPosition, beadSprite});\r\n        //         // }\r\n        //\r\n        //         // newBead.getComponent(\"bgf_BeadTemplate\").setBeadType({beadPosition, beadNo});\r\n        //         let beadName = this.nowRowPosition + i;\r\n        //         newBead.setName(`${beadName}`);\r\n        //         newBead.parent = this.beadContainer;\r\n        //         this.nowRowCount++;\r\n        //     }\r\n        // };\r\n\r\n        const putBead = (beadObj, beadSprite, beadNo) => {\r\n            const {beadPosition, beadRow, isChangeColor} = beadObj;\r\n            this.nowBeadPosition = beadPosition;\r\n            if (isChangeColor) {\r\n                this.nowRowPosition = beadRow;\r\n                this.nextPutRowPosition = beadRow + 1;\r\n                if (this.changeColorBeadPosition > this.nowRowCount) {\r\n                    let newBead = this.beadPool.get({beadPosition, beadSprite});\r\n                    newBead.getComponent(\"bgf_BeadTemplate\").setBeadType({beadPosition, beadNo});\r\n                    newBead.setName(`${this.nowRowPosition}`);\r\n                    newBead.parent = this.beadContainer;\r\n                    this.nowRowCount++;\r\n                    // createMoreThreeBeadRow();\r\n                    // this.scrollView.scrollToRight(0.4);\r\n\r\n                } else {\r\n                    let oldNextBeadRow = this.beadContainer.getChildByName(`${beadRow}`);\r\n                    if (oldNextBeadRow === null) {\r\n                        oldNextBeadRow = this.beadContainer.children[0];\r\n                        // console.log(oldNextBeadRow.name);\r\n                        this.nowRowPosition = oldNextBeadRow.name * 1;\r\n                        this.nextPutRowPosition = this.nowRowPosition + 1;\r\n                        this.changeColorBeadPosition = this.nowRowPosition;\r\n                    }\r\n                    let beadRowTemplate = oldNextBeadRow.getComponent(\"bgf_BeadTemplate\");\r\n                    beadRowTemplate.setNewSprite(beadPosition, beadSprite);\r\n                    beadRowTemplate.setBeadType({beadPosition, beadNo});\r\n                }\r\n                this.changeColorBeadPosition++;\r\n            } else if (beadRow === this.nextPutRowPosition) {\r\n                this.nowRowPosition = this.nextPutRowPosition;//1-base\r\n                if (this.nextPutRowPosition > this.nowRowCount) {\r\n                    let newBead = this.beadPool.get({beadPosition, beadSprite});\r\n                    newBead.getComponent(\"bgf_BeadTemplate\").setBeadType({beadPosition, beadNo});\r\n                    newBead.setName(`${this.nowRowPosition}`);\r\n                    newBead.parent = this.beadContainer;\r\n                    this.nowRowCount++;\r\n                    // createMoreThreeBeadRow();\r\n                    // this.scrollView.scrollToRight(0.4);\r\n                } else {\r\n                    let oldNextBeadRow = this.beadContainer.getChildByName(`${beadRow}`);\r\n                    let beadRowTemplate = oldNextBeadRow.getComponent(\"bgf_BeadTemplate\");\r\n                    beadRowTemplate.setNewSprite(beadPosition, beadSprite);\r\n                    beadRowTemplate.setBeadType({beadPosition, beadNo});\r\n                }\r\n                this.nextPutRowPosition++;\r\n            } else {\r\n                let nowBeadRow = this.beadContainer.getChildByName(`${beadRow}`);\r\n                let beadRowTemplate = nowBeadRow.getComponent(\"bgf_BeadTemplate\");\r\n                beadRowTemplate.setNewSprite(beadPosition, beadSprite);\r\n                beadRowTemplate.setBeadType({beadPosition, beadNo});\r\n            }\r\n        };\r\n\r\n        const getIsTurn = (beadObj, beadNo) => {\r\n\r\n            let isTurn = false;\r\n            const {beadRow} = beadObj;\r\n            let nowBeadRow = this.beadContainer.getChildByName(`${beadRow}`);\r\n            if (nowBeadRow === null) nowBeadRow = this.beadContainer.children[0];\r\n            let beadTemplate = nowBeadRow.getComponent(\"bgf_BeadTemplate\");\r\n\r\n            //判斷下一顆有沒有珠子,以及珠子顏色\r\n            let nextBead = this.nowBeadPosition + 1;\r\n            if (beadTemplate.getBeadType(nextBead) !== -1 && beadTemplate.getBeadType(nextBead) !== beadNo) isTurn = true;\r\n\r\n            //判斷前一row的下一顆有沒有珠子,以及顏色\r\n            let beforeRow = this.beadContainer.getChildByName(`${beadRow - 1}`);\r\n            if (beforeRow) {\r\n                let beforeRowBeadTemplate = beforeRow.getComponent(\"bgf_BeadTemplate\");\r\n                if (beforeRowBeadTemplate.getBeadType(nextBead) === beadNo) isTurn = true;\r\n            }\r\n\r\n            //當row 未滿5顆, 要再加判斷下下一顆顏色\r\n            if (this.nowBeadPosition < 4) {\r\n                let nextTwoBead = this.nowBeadPosition + 2;\r\n                if (beadTemplate.getBeadType(nextTwoBead) === beadNo) isTurn = true;\r\n            }\r\n\r\n            //在第一顆, 而且要前一row第一顆跟這顆同顏色 ==>必須修改下一次如果變色的擺放位置\r\n            if (this.nowBeadPosition === 0 && beforeRow) {\r\n                let beforeRowBeadTemplate = beforeRow.getComponent(\"bgf_BeadTemplate\");\r\n                if (beforeRowBeadTemplate.getBeadType(0) === beadNo) this.changeColorBeadPosition = this.nowRowPosition + 1;\r\n            }\r\n\r\n            return isTurn;\r\n        };\r\n\r\n        if (isFirstTimeCreate) {\r\n            let beadPosition = 0;//同一個列中第幾顆珠子, 0~5\r\n            this.nowRowPosition = 1;//1-base\r\n            this.changeColorBeadPosition = 2;//1-base\r\n            this.nextPutRowPosition = this.nowRowPosition + 1;\r\n            this.nowBeadPosition = beadPosition;\r\n            this.nowRowCount = this.beadContainer.childrenCount;\r\n            if (this.beadContainer.childrenCount === 0) {\r\n\r\n                let newBead = this.beadPool.get({beadPosition, beadSprite});\r\n                newBead.getComponent(\"bgf_BeadTemplate\").setBeadType({beadPosition, beadNo});\r\n                this.nowRowCount++;\r\n                newBead.setName(`${this.nowRowPosition}`);\r\n                newBead.parent = this.beadContainer;\r\n\r\n            } else {\r\n                let beadRow = this.beadContainer.getChildByName(`${this.nowRowPosition}`);\r\n                let beadRowTemplate = beadRow.getComponent(\"bgf_BeadTemplate\");\r\n                beadRowTemplate.setNewSprite(beadPosition, beadSprite);\r\n                beadRowTemplate.setBeadType({beadPosition, beadNo});\r\n            }\r\n\r\n            if (beadNo === 0) {\r\n                this.blackBead = {beadPosition: 1, beadRow: this.nowRowPosition, isChangeColor: false};\r\n                this.redBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n            } else {\r\n                this.blackBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                this.redBead = {beadPosition: 1, beadRow: this.nowRowPosition, isChangeColor: false};\r\n            }\r\n\r\n\r\n        } else {\r\n            let putBeadType = beadNo === 0 ? this.blackBead : this.redBead;\r\n            putBead(putBeadType, beadSprite, beadNo);\r\n\r\n            //web版要判斷最後三row是不是空白,不是的話要補足三row空白\r\n            // if(!cc.sys.isNative && this.beadContainer.childrenCount < 21){\r\n            //     let checkFirstRow = this.beadContainer.childrenCount - 2;\r\n            //     let checkLastRow = this.beadContainer.childrenCount;\r\n            //     for(let i =  checkFirstRow; i <= checkLastRow  ; i ++){\r\n            //         let beadRow = this.beadContainer.getChildByName(`${i}`);\r\n            //         let beadTemplate = beadRow.getComponent(\"bgf_BeadTemplate\");\r\n            //\r\n            //         for(let j = 0 ; j < 5 ; j ++){\r\n            //             if(beadTemplate.getBeadType(j) !== -1){\r\n            //                 //表示該row 有珠子\r\n            //                 //create empty row\r\n            //                 let beadPosition = 0;\r\n            //                 let beadSprite = null;\r\n            //                 let newBead;\r\n            //                 newBead = this.beadPool.get({beadPosition, beadSprite});\r\n            //                 let beadName = this.beadContainer.childrenCount + 1;\r\n            //                 console.log('beadName = ',beadName);\r\n            //                 newBead.setName(`${beadName}`);\r\n            //                 newBead.parent = this.beadContainer;\r\n            //                 this.nowRowCount++;\r\n            //                 break;\r\n            //             }\r\n            //         }\r\n            //\r\n            //     }\r\n            //\r\n            // }\r\n\r\n            //判斷三個\r\n            let setBlackBead, setRedBead;\r\n\r\n            if (this.nowBeadPosition === 5) {\r\n                //一排滿了\r\n                if (beadNo === 0) {\r\n                    setBlackBead = {beadPosition: 5, beadRow: this.nextPutRowPosition, isChangeColor: false};\r\n                    setRedBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                } else {\r\n                    setBlackBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                    setRedBead = {beadPosition: 5, beadRow: this.nextPutRowPosition, isChangeColor: false};\r\n                }\r\n\r\n            } else if (this.nowRowPosition === 1) {\r\n                //還在初始第一排\r\n                this.nowBeadPosition++;\r\n                if (beadNo === 0) {\r\n                    setBlackBead = {\r\n                        beadPosition: this.nowBeadPosition,\r\n                        beadRow: this.nowRowPosition,\r\n                        isChangeColor: false\r\n                    };\r\n                    setRedBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                } else {\r\n                    setBlackBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                    setRedBead = {\r\n                        beadPosition: this.nowBeadPosition,\r\n                        beadRow: this.nowRowPosition,\r\n                        isChangeColor: false\r\n                    };\r\n                }\r\n\r\n            } else {\r\n                let isTurn = getIsTurn(putBeadType, beadNo);\r\n                if (beadNo === 0) {\r\n                    setRedBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                    isTurn ? setBlackBead = {\r\n                        beadPosition: this.nowBeadPosition,\r\n                        beadRow: this.nextPutRowPosition,\r\n                        isChangeColor: false\r\n                    } : setBlackBead = {\r\n                        beadPosition: ++this.nowBeadPosition,\r\n                        beadRow: this.nowRowPosition,\r\n                        isChangeColor: false\r\n                    };\r\n                } else {\r\n                    setBlackBead = {beadPosition: 0, beadRow: this.changeColorBeadPosition, isChangeColor: true};\r\n                    isTurn ? setRedBead = {\r\n                        beadPosition: this.nowBeadPosition,\r\n                        beadRow: this.nextPutRowPosition,\r\n                        isChangeColor: false\r\n                    } : setRedBead = {\r\n                        beadPosition: ++this.nowBeadPosition,\r\n                        beadRow: this.nowRowPosition,\r\n                        isChangeColor: false\r\n                    };\r\n                }\r\n\r\n            }\r\n\r\n            this.blackBead = setBlackBead;\r\n            this.redBead = setRedBead;\r\n        }\r\n\r\n        console.log('this.nowRowPosition = ', this.nowRowPosition);\r\n        console.log('this.changeColorBeadPosition = ', this.changeColorBeadPosition);\r\n        console.log('this.nextPutRowPosition = ', this.nextPutRowPosition);\r\n        this.scrollView.scrollToRight(0.4);\r\n        let {children} = this.beadContainer;\r\n        let isFull = cc.sys.isNative ? this.beadContainer.childrenCount : (this.beadContainer.childrenCount - 3);\r\n        //列滿了更新\r\n        if (isFull >= this.totalRoadCount) {\r\n            this.beadPool.put(first(children));\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * 確認最後一顆是否與新的一顆顏色相同\r\n     * @param now\r\n     * @param last\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    _checkIsTheSame(now, last) {\r\n        let isTheSame = false;\r\n\r\n        return isTheSame;\r\n    },\r\n\r\n    /**\r\n     * 取得珠子圖\r\n     * @param beadType 珠子類型\r\n     * @returns {cc.SpriteFrame | *}\r\n     * @private\r\n     */\r\n    _getBeadSprite(beadType) {\r\n        // console.log(\"beadType = \",beadType);\r\n        let spriteName;\r\n        const cases = {\r\n            1: \"bgf_black\",\r\n            2: \"bgf_red\",\r\n            4: \"bgf_blacklucky\",\r\n            5: \"bgf_redlucky\"\r\n        };\r\n        if (cases.hasOwnProperty(beadType)) {\r\n            spriteName = cases[beadType];\r\n        }\r\n        let resultSriteFrame = this.beadSpriteAtlas.getSpriteFrame(spriteName);\r\n        // if (beadType[0] === 1 || beadType[0] === 4) {\r\n        //     resultSriteFrame.name = \"0\";//名字\"0\"是黑\r\n        // } else if (beadType[0] === 2 || beadType[0] === 5) {\r\n        //     resultSriteFrame.name = \"1\";//名字\"1\"是紅\r\n        // }\r\n\r\n        return resultSriteFrame;\r\n    },\r\n\r\n    _getNowBeadNo(beadType) {\r\n        let beadNo;\r\n        if (beadType[0] === 1 || beadType[0] === 4) {\r\n            beadNo = 0;//0是黑\r\n        } else if (beadType[0] === 2 || beadType[0] === 5) {\r\n            beadNo = 1;//1是紅\r\n        }\r\n        return beadNo;\r\n    }\r\n\r\n});\r\n"]}